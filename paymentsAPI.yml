openapi: 3.0.0
info:
  description: ""
  version: 1.0.0
  title: Payment-Idempotency
tags:
  - name: payments
    description: Everything about payment
paths:
  /payments:
    post:
      tags:
        - payments
      summary: Proceed a payment
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
        description: Payment that need to be processed
        required: true
      responses:
        "201":
          description: payment done
  "/payments/{paymentId}":
    get:
      tags:
        - payments
      summary: Find payment by ID
      description: Returns a single payment
      operationId: getPaymentById
      parameters:
        - name: paymentId
          in: path
          description: ID of payment to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Payment not found
    delete:
      tags:
        - payments
      summary: Delete payment by paymentId
      operationId: deletePaymentById
      parameters:
        - name: paymentId
          in: path
          description: ID of an existing payment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
  "/payments/status{transactionUUID}":
    get:
      tags:
        - payments
      summary: Find payment status by transaction UUID
      description: Returns a single payment status
      operationId: getPaymentStatusByTransactionUUID
      parameters:
        - name: transactionUUID
          in: path
          description: transactionUUID of payment to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: Invalid transaction UUID supplied
        "404":
          description: Payment status not found
        "412":
          description: Transaction already taken in count
servers:
  - url: http://localhost:8080/v1
components:
  schemas:
    Credit_card_info:
      type: object
      properties:
        card_number:
          type: integer
          format: int64
        expirationDate:
          type: string
          format: date
        card_verification_value:
          type: integer
          format: int64
    Buyer_info:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        adress:
          type: string
        zipcode:
          type: string
        phone:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Payment:
      type: object
      required:
        - buyer_info
        - transaction_UUID
        - credit_card_info
        - payment_orders
      properties:
        buyer_info:
          $ref: "#/components/schemas/Buyer_info"
        transaction_UUID:
          type: string
          example: 25e54d67-45a4-46ab-8f9f-25769f392de6
        credit_card_info:
          $ref: "#/components/schemas/Credit_card_info"
        payment_orders:
          type: array
          items:
            $ref: "#/components/schemas/Order"